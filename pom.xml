<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.louis</groupId>
    <artifactId>springboot-study</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <!-- 第一章：Spring Boot入门包括基础配置 -->
        <!--Spring Boot入门：HelloWorld -->
        <module>chapter01-01-helloworld</module>
        <!--Spring Boot基础配置：Properties配置 -->
        <module>chapter01-02-properties</module>
        <!--Spring Boot基础配置：YAML配置 -->
        <module>chapter01-03-yaml</module>
        <!--Spring Boot整合Lombok -->
        <module>chapter01-04-lombok</module>
        <!--Spring Boot使用Junit单元测试 -->
        <module>chapter01-05-test-junit</module>

        <!-- 第二章：Spring Boot整合模版引擎和WEB开发 -->
        <!--Spring Boot整合模版引擎：Thymeleaf -->
        <module>chapter02-01-thymeleaf</module>
        <!--Spring Boot整合模版引擎：FreeMarker -->
        <module>chapter02-02-freemarker</module>
        <!--Spring Boot整合文件上传 -->
        <module>chapter02-03-web-upload</module>
        <!--Spring Boot整合全局异常处理 -->
        <module>chapter02-04-global-exception-handle</module>

        <!-- 第三章：Spring Boot连接sql数据库资源整合数据库插件 -->
        <!--Spring Boot整合JPA快速入门 -->
        <module>chapter03-01-jpa</module>
        <!--Spring Boot整合Mybatis -->
        <module>chapter03-02-mybatis</module>
        <!--Spring Boot整合Mybatis Annotation 注解案例 -->
        <module>chapter03-02-mybatis-annotation</module>
        <!--Spring Boot使用Druid数据库连接池 -->
        <module>chapter03-03-druid</module>
        <!--Spring Boot+Mybatis配置PaheHelper分页插件 -->
        <module>chapter03-04-pagehelper</module>
        <!--Spring Boot整合Mybatis-Plus：基于RESTful风格 -->
        <module>chapter03-05-mybatis-plus</module>
        <!--Spring Boot 整合 Mybatis 实现 Druid 多数据源配置 -->
        <module>chapter03-06-mybatis-multidatasource</module>

        <!-- 第四章：Spring Boot整合NoSQL数据缓存 -->
        <!-- Spring Boot 整合 Redis 实现缓存操作 -->
        <module>chapter04-01-redis</module>
        <!-- Spring Boot 整合 Redis Annotation 实现缓存操作 -->
        <module>chapter04-01-redis-annotation</module>
        <!-- Spring Boot 整合 MongoDB 实现缓存操作 -->
        <module>chapter04-02-mongodb</module>
        <!-- Spring Boot 整合 EhCache 实现缓存操作 -->
        <module>chapter04-03-cache-ehcache</module>

        <!-- 第五章：Spring Boot整合api文档管理工具 -->
        <!-- Spring Boot整合Swagger2构建RESTful API -->
        <module>chapter05-01-swagger2</module>
        <!-- Spring Boot整合REST Docs构建RESTful API -->
        <module>chapter05-02-rest-docs</module>
        <!-- Spring Boot整合apiDoc构建RESTful API -->
        <module>chapter05-03-apidoc</module>

        <!-- 第六章：Spring Boot整合任务调度及批量处理 -->
        <!-- Spring Boot整合SpringTask实现简单任务调度 -->
        <module>chapter06-01-task</module>
        <!-- Spring Boot整合Quartz实现动态定时任务 -->
        <module>chapter06-02-quartz</module>
        <!-- Spring Boot整合SpringBatch实现批处理 -->
		<module>chapter06-03-springbatch</module>

        <!-- 第七章：Spring Boot整合安全控制及权限篇 -->
		<module>chapter07-01-springsecurity</module>
		<!-- Spring Boot 整合 Shiro -->
		<module>chapter07-03-shiro</module>
		<!-- Spring Boot 整合 Shiro JWT -->
		<module>chapter07-03-shiro-jwt</module>
		<!-- Spring Boot配置HTTPS -->
		<module>chapter07-04-https</module>
		

        <!-- 第八章：Spring Boot企业开发 -->
        <!-- Spring Boot整合mail邮件发送 -->
		<module>chapter08-01-mail</module>
        <!-- Spring Boot支持国际化i18n -->
		<module>chapter08-02-i18n</module>
		<!-- Spring Boot整合WebSocket -->
		<module>chapter08-03-websocket</module>
		

    </modules>

    <properties>
        <jdk.version>1.8</jdk.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <springboot.project.version>2.1.0.RELEASE</springboot.project.version>
    </properties>

    <!-- Spring Boot 启动父依赖 -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
    </parent>

    <!-- dependencyManagement简介 -->
    <!-- dependencyManagement元素的作用：对项目中多个模块的公关依赖进行版本控制 -->
    <dependencyManagement>
        <dependencies>
            <!-- spring-boot-starter：核心模块，包括自动配置支持、日志和YAML -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot Test 依赖：测试模块，包括JUnit、Hamcrest、Mockito -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.project.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.13.1</version>
                <scope>test</scope>
            </dependency>
            <!-- Spring Boot Web 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- spring-boot实现热部署 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${springboot.project.version}</version>
                <optional>true</optional>
            </dependency>
            <!-- Spring Boot Thymeleaf 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-thymeleaf</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot FreeMarker 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-freemarker</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- 数据源配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot Mybatis 依赖 -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>2.0.0</version>
            </dependency>
            <!-- MySQL 连接驱动依赖 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.11</version>
                <scope>runtime</scope>
            </dependency>
            <!-- druid依赖 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>1.1.10</version>
            </dependency>
            <!-- lombok依赖 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.6</version>
                <optional>true</optional>
            </dependency>
            <!-- Spring Boot Redis 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot MongoDB 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-mongodb</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot cache 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-cache</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Ehcache -->
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>2.10.4</version>
            </dependency>
            <!-- Spring Boot Quartz 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-quartz</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot batch 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-batch</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
            <!-- Spring Boot Spring Security 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
			<!-- spring shiro依赖 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>1.4.0</version>
			</dependency>
			<!-- JWT依赖 -->
			<dependency>
				<groupId>com.auth0</groupId>
				<artifactId>java-jwt</artifactId>
				<version>3.4.0</version>
			</dependency>
            <!-- spring-social-web 依赖 -->
            <dependency>
                <groupId>org.springframework.social</groupId>
                <artifactId>spring-social-web</artifactId>
                <version>1.1.6.RELEASE</version>
            </dependency>
            <!-- Spring Boot mail 依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-mail</artifactId>
                <version>${springboot.project.version}</version>
            </dependency>
			<!--Spring Boot WebSocket 依赖 -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-websocket</artifactId>
                <version>${springboot.project.version}</version>
			</dependency>


        </dependencies>

    </dependencyManagement>


    <!--springboot的maven插件 -->
    <!--以maven的形式为应用springboot支持 -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <!-- 该插件的主要功能是进行项目的打包发布处理 -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--开启热部署 -->
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>